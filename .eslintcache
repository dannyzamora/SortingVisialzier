[{"C:\\Users\\work\\OneDrive\\Desktop\\code\\react\\Visualizer\\SortingVisialzier\\src\\index.js":"1","C:\\Users\\work\\OneDrive\\Desktop\\code\\react\\Visualizer\\SortingVisialzier\\src\\App.js":"2","C:\\Users\\work\\OneDrive\\Desktop\\code\\react\\Visualizer\\SortingVisialzier\\src\\reportWebVitals.js":"3","C:\\Users\\work\\OneDrive\\Desktop\\code\\react\\Visualizer\\SortingVisialzier\\src\\components\\SortingVisual.js":"4","C:\\Users\\work\\OneDrive\\Desktop\\code\\react\\Visualizer\\SortingVisialzier\\src\\components\\algorithms\\algorithms.js":"5"},{"size":517,"mtime":1610659730482,"results":"6","hashOfConfig":"7"},{"size":271,"mtime":1610659730478,"results":"8","hashOfConfig":"7"},{"size":375,"mtime":1610659730484,"results":"9","hashOfConfig":"7"},{"size":3738,"mtime":1611120542777,"results":"10","hashOfConfig":"7"},{"size":540,"mtime":1611119147030,"results":"11","hashOfConfig":"7"},{"filePath":"12","messages":"13","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"19d4z0g",{"filePath":"14","messages":"15","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"16","messages":"17","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"18","messages":"19","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"20"},{"filePath":"21","messages":"22","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"23"},"C:\\Users\\work\\OneDrive\\Desktop\\code\\react\\Visualizer\\SortingVisialzier\\src\\index.js",[],"C:\\Users\\work\\OneDrive\\Desktop\\code\\react\\Visualizer\\SortingVisialzier\\src\\App.js",["24"],"C:\\Users\\work\\OneDrive\\Desktop\\code\\react\\Visualizer\\SortingVisialzier\\src\\reportWebVitals.js",[],"C:\\Users\\work\\OneDrive\\Desktop\\code\\react\\Visualizer\\SortingVisialzier\\src\\components\\SortingVisual.js",["25"],"import React, { useState, useEffect, useRef } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nimport * as sorting from \"./algorithms/algorithms\";\r\n\r\nconst SortingVisual = (props) => {\r\n  const [array, setArray] = useState([]);\r\n  const containerRef = useRef(null);\r\n  //const [width, setWidth] = React.useState(window.innerWidth);\r\n\r\n  useEffect(() => {\r\n    initialArray();\r\n  }, []);\r\n\r\n  const initialArray = () => {\r\n    clearInterval();\r\n    const array = [];\r\n    for (let i = 0; i < 50; i++) {\r\n      array.push(randomInt(1, 500));\r\n    }\r\n\r\n    setArray(array);\r\n  };\r\n\r\n  const mergeSort = () => {};\r\n\r\n  const bubbleSort = () => {\r\n    const animations = sorting.bubbleSort(array);\r\n    console.log(array);\r\n    console.log(animations);\r\n    animations.forEach(([comparison, swapped], i) => {\r\n      if (!swapped) {\r\n        setTimeout(() => {\r\n          if (comparison.length === 2) {\r\n            const [i, j] = comparison;\r\n            animateArrayAccess(i);\r\n            animateArrayAccess(j);\r\n          } else {\r\n            const [i] = comparison;\r\n            console.log(i);\r\n            animateArrayAccess(i);\r\n          }\r\n        }, i * 5);\r\n      } else {\r\n        setTimeout(() => {\r\n          setArray((prev) => {\r\n            const [k, newValue] = comparison;\r\n            const newArray = [...prev];\r\n            newArray[k] = newValue;\r\n            return newArray;\r\n          });\r\n        }, i * 5);\r\n      }\r\n    });\r\n\r\n    function animateArrayAccess(index) {\r\n      const arrayBars = containerRef.current.children;\r\n      const arrayBarStyle = arrayBars[index].style;\r\n      setTimeout(() => {\r\n        arrayBarStyle.backgroundColor = \"orange\";\r\n      }, 1);\r\n      setTimeout(() => {\r\n        arrayBarStyle.backgroundColor = \"\";\r\n      }, 5);\r\n    }\r\n    // setTimeout(()=>{\r\n    //   animateSortedArray();\r\n    // },animations.length*500)\r\n  };\r\n\r\n  // function animateSortedArray() {\r\n  //   const arrayBars = containerRef.current.children;\r\n  //   for (let i = 0; i < arrayBars.length; i++) {\r\n  //     const arrayBarStyle = arrayBars[i].style;\r\n  //     setTimeout(\r\n  //       () => (arrayBarStyle.backgroundColor = \"purple\"),\r\n  //       i * 500,\r\n  //     );\r\n  //   }\r\n  //   setTimeout(() => {\r\n\r\n  //   }, arrayBars.length * 500);\r\n  // }\r\n\r\n  const quickSort = () => {};\r\n\r\n  const heapSort = () => {};\r\n\r\n  const testAlg = () => {\r\n    for (let i = 0; i < 100; i++) {\r\n      const arr = [];\r\n      const len = randomInt(1, 1000);\r\n      for (let i = 0; i < len; i++) {\r\n        arr.push(randomInt(-1000, 1000));\r\n      }\r\n      const javaScript = arr.sort((a, b) => a - b);\r\n      const bubSort = sorting.bubbleSort(arr);\r\n      console.log(arraysAreEqual(javaScript, bubSort));\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"container\">\r\n      <div className=\"array\" ref={containerRef}>\r\n        {array.map((val, i) => (\r\n          <div className=\"array__bar\" key={i} style={{ height: `${val}px` }} />\r\n        ))}\r\n      </div>\r\n      <button onClick={initialArray}>New Array</button>\r\n      <button onClick={mergeSort}>Merge Sort</button>\r\n      <button onClick={bubbleSort}>Bubble Sort</button>\r\n      <button onClick={quickSort}>Quick Sort</button>\r\n      <button onClick={heapSort}>Heap Array</button>\r\n      <button onClick={testAlg}>Test</button>\r\n    </div>\r\n  );\r\n};\r\n\r\nSortingVisual.propTypes = {};\r\n\r\n// https://www.w3schools.com/js/js_random.asp\r\nconst randomInt = (min, max) =>\r\n  Math.floor(Math.random() * (max - min + 1)) + min;\r\n\r\nconst arraysAreEqual = (arr1, arr2) => {\r\n  if (arr1.length !== arr2.length) return false;\r\n  for (let i = 0; i < arr1.length; i++) {\r\n    if (arr1[i] !== arr2[i]) return false;\r\n  }\r\n  return true;\r\n};\r\n\r\nexport default SortingVisual;\r\n","C:\\Users\\work\\OneDrive\\Desktop\\code\\react\\Visualizer\\SortingVisialzier\\src\\components\\algorithms\\algorithms.js",[],["26","27"],{"ruleId":"28","severity":1,"message":"29","line":1,"column":8,"nodeType":"30","messageId":"31","endLine":1,"endColumn":12},{"ruleId":"28","severity":1,"message":"32","line":2,"column":8,"nodeType":"30","messageId":"31","endLine":2,"endColumn":17},{"ruleId":"33","replacedBy":"34"},{"ruleId":"35","replacedBy":"36"},"no-unused-vars","'logo' is defined but never used.","Identifier","unusedVar","'PropTypes' is defined but never used.","no-native-reassign",["37"],"no-negated-in-lhs",["38"],"no-global-assign","no-unsafe-negation"]